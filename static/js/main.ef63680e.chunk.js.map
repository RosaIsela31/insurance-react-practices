{"version":3,"sources":["components/Header.js","helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/AppContainer.js","App.js","serviceWorker.js","index.js"],"names":["ContenedorHeader","styled","header","TextHeader","h1","Header","titulo","primerMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","useState","marca","year","plan","datos","guardarDatos","error","setError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","console","log","cotización","Number","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","cotizacion","Contenedor","ContenedorFormulario","AppContainer","marcar","resumen","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef63680e.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nconst ContenedorHeader = styled.header`\n  background-color: #26C6DA;\n  padding: 10px;\n  font-weight: bold;\n  color: #FFFFFF; \n`;\n\nconst TextHeader = styled.h1`\n  font-size: 2rem;\n  margin: 0;\n  font-family: 'Slabo 27px', serif;\n  text-align: center;\n`\n\nconst Header = ({titulo}) => {\n  return ( \n    <ContenedorHeader>\n      <TextHeader>{titulo}</TextHeader>\n    </ContenedorHeader> \n  );\n}\n \nexport default Header;","// Obten la diferencia de años  \nexport const obtenerDiferenciaYear = (year) => {\n  return new Date().getFullYear() - year;\n}\n\n// Calcula el total a pagar según la marca\nexport const calcularMarca = (marca) => {\n  let incremento;\n\n   switch(marca){\n      case 'europeo':  \n          incremento = 1.30;\n          break;\n      case 'americano': \n          incremento =  1.15;\n          break;\n      case 'asiatico':\n          incremento =  1.05;\n          break;\n      default:\n        break;\n   }\n\n   return incremento;\n}\n\n// Calcula el tipo de seguro \nexport const obtenerPlan = (plan) => {\n  return (plan === 'basico') ? 1.20 : 1.50;\n}\n\n// Muestra pa primer letra mayúscula\nexport const primerMayuscula = (texto) => {\n  return texto.charAt(0).toUpperCase() + texto.slice(1);\n}","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from '../helper';\n\nconst Campo = styled.div`\n  display: flex;\n  margin-bottom: 1rem;\n  align-items: center;\n`;\n\nconst Label = styled.label`\n  flex: 0 0 100px;\n`;\n\nconst Select = styled.select`\n  display: block;\n  width: 100%;\n  padding: 1rem; \n  border: 1px solid #e1e1e1; \n  -webkit-appearance: none;\n`;\n\nconst InputRadio = styled.input`\n  margin: 0 1rem;\n`;\n\nconst Boton = styled.button`\n  background-color: #00838F;\n  font-size: 16px;\n  width: 100%;\n  padding: 1rem;\n  color: #fff; \n  text-transform: uppercase;\n  font-weight: bold;\n  border: none;\n  transition: background-color .3s ease;\n  margin-top: 2rem;\n\n  /* Saas */\n  &:hover{\n    background-color: #26C6DA;\n    cursor: pointer;\n  }\n`;\n\nconst Error = styled.div`\n  background-color:  red;\n  color: white;\n  padding: 1rem;\n  width: 100%;\n  text-align: center;\n  margin-bottom: 2rem;\n`;\n\nconst Formulario = ({ guardarResumen }) => {\n\n  const [ datos, guardarDatos ] = useState({\n    marca: '',\n    year: '',\n    plan: ''\n  });\n\n  const [ error, setError ] = useState(false); \n\n  // Extraer los valores del state\n  const { marca, year, plan }  = datos;\n\n  // Leer los datos del formulario y colocarlos en el state\n  const obtenerInformacion = e => {\n    guardarDatos({\n      ...datos,\n      [e.target.name] : e.target.value\n    })\n  }\n\n  // Cuando el usuario presiona submit\n  const cotizarSeguro = e => {\n    e.preventDefault();\n\n    if(marca.trim() === '' || year.trim() === '' || plan.trim() === ''){\n      setError(true);\n      return;\n    }\n\n    setError(false);\n\n    // Una base de 2000\n    let resultado = 2000;\n\n    // Obtener la diferencia de años\n    const diferencia = obtenerDiferenciaYear(year);\n    \n    // Por cada año, restar el 3%\n    resultado -= ((diferencia * 3) * resultado) / 100;\n\n    // Americano 15%\n    // Asiatico 5%\n    // Europeo 30% \n    resultado = calcularMarca(marca) * resultado;    \n\n    // Plan básico aumenta  20%\n    // Plan completo aumenta 50%\n    const incrementoPlan = obtenerPlan(plan)\n    resultado = parseFloat( incrementoPlan * resultado ).toFixed(2); \n    console.log(resultado);\n    \n\n    // Total\n    guardarResumen({\n      cotización: Number(resultado),\n        datos\n    })\n  }\n\n  return ( \n    <form\n        onSubmit={cotizarSeguro}\n    >\n    {error ? <Error>Todos los campos son obligatorios</Error> : null}\n\n      <Campo>\n        <Label>Marca</Label>\n        <Select\n          name='marca'\n          value={marca}\n          onChange={obtenerInformacion}\n        >\n          <option value=''>-- Seleccionar --</option>\n          <option value='americano'>Americano</option>\n          <option value='europeo'>Europeo</option>\n          <option value='asiatico'>Asiatico </option>\n        </Select>\n      </Campo>\n      <Campo>\n        <Label>Año</Label>\n        <Select\n          name='year'\n          value={year}\n          onChange={obtenerInformacion}\n        >\n          <option value=''>-- Seleccionar --</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n          <option value='2018'>2018</option>\n          <option value='2017'>2017</option>\n          <option value='2016'>2016</option>\n          <option value='2015'>2015</option>\n          <option value='2014'>2014</option>\n          <option value='2013'>2013</option>\n          <option value='2012'>2012</option>\n        </Select>\n      </Campo>\n      <Campo>\n        <Label>Plan</Label>\n        <InputRadio \n          type='radio'\n          name='plan'\n          value='basico'\n          checked={plan === 'basico'}\n          onChange={obtenerInformacion}\n        /> Básico\n\n        <InputRadio \n          type='radio'\n          name='plan'\n          value='completo'\n          checked={plan === 'completo'}\n          onChange={obtenerInformacion}\n        /> Completo\n      </Campo>\n\n      <Boton type='submit'>Cotizar</Boton>\n    </form>\n   );\n}\n \nexport default Formulario;","import React from 'react';\nimport styled from '@emotion/styled'; \nimport { primerMayuscula } from '../helper';\n\nconst ContenedorResumen =  styled.div`\n   padding: 1rem;\n   text-align: center;\n   background-color: #00838F;\n   color: #FFF;\n   margin-top: 1rem; \n`;\n\nconst Resumen = ({datos}) => {\n  // Extraer datos\n\n  const {marca, year, plan} = datos;\n  console.log(marca);\n  \n\n  if( marca === '' || year === '' || plan === '') return null;\n  \n  return ( \n    <ContenedorResumen>\n      <h2>Resumen de cotización</h2>\n      <ul>\n        <li>Marca: {primerMayuscula(marca)}</li>\n        <li>Plan: {primerMayuscula(plan)}</li>\n        <li>Año del auto: {year}</li>\n      </ul>\n    </ContenedorResumen>\n   );\n}\n \nexport default Resumen;","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Mensaje =  styled.p`\n   background-color: rgb(127, 224, 237);\n    margin-top: 2rem;\n    padding: 1rem;\n    text-align: center;\n`;\n\nconst ResultadoCotizacion = styled.div`\n  text-align: center;\n  padding: .5rem;\n  border: 1px solid #26C6DA;\n  background-color: rgb(127, 224, 237);\n  margin-top: 1rem;\n  position: relative;\n`;\n\nconst TextoCotizacion = styled.p`\n  color: #00838F;\n  padding: 1rem;\n  text-transform: uppercase;\n  font-weight: bold;\n  margin: 0;\n`;\n\nconst Resultado = ({ cotizacion }) => {\n\n  return ( \n    (cotizacion === 0) \n    ? <Mensaje>Elige marca, año y tipo de seguro</Mensaje> \n    : (\n      <ResultadoCotizacion>\n          <TextoCotizacion>El total es $: {cotizacion}</TextoCotizacion>\n      </ResultadoCotizacion>\n      )\n   );\n}\n \nexport default Resultado;","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Resumen from './Resumen';\nimport Resultado from './Resultado';\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`\n\nconst ContenedorFormulario = styled.div`\n  background-color: #FFF;\n  padding: 3rem;\n`\n\nconst AppContainer = () => {\n  \n  const [ resumen, guardarResumen ] = useState({\n    cotizacion: 0,\n    datos: {\n      marcar: '',\n      year: '',\n      plan: ''\n    }\n  });\n\n  // Extraer datos \n   \n  const { cotizacion, datos } = resumen;\n\n  return ( \n    <Contenedor>\n      <Header \n        titulo='Cotizador de seguros'\n      />\n      <ContenedorFormulario>\n        <Formulario \n          guardarResumen={guardarResumen}\n        /> \n        <Resumen\n          datos={datos} \n        />\n        <Resultado \n          cotizacion={cotizacion}\n        />\n\n      </ContenedorFormulario>\n    </Contenedor>\n   );\n}\n  \nexport default AppContainer;","import React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport AppContainer from './components/AppContainer';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route path='/' component={AppContainer} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}